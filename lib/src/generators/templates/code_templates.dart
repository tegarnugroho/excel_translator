// Code generation templates
class CodeTemplates {
  /// Template for class header
  static String classHeader({
    required String className,
    String? comment,
  }) {
    final buffer = StringBuffer();
    
    if (comment != null) {
      buffer.writeln('/// $comment');
    }
    buffer.writeln('class $className {');
    
    return buffer.toString();
  }

  /// Template for method signature
  static String methodSignature({
    required String methodName,
    required String returnType,
    List<String> parameters = const [],
    String? comment,
  }) {
    final buffer = StringBuffer();
    
    if (comment != null) {
      buffer.writeln('  /// $comment');
    }
    
    final paramString = parameters.isEmpty ? '' : '{${parameters.join(', ')}}';
    buffer.writeln('  $returnType $methodName($paramString) {');
    
    return buffer.toString();
  }

  /// Template for getter
  static String getter({
    required String propertyName,
    required String returnType,
    String? comment,
  }) {
    final buffer = StringBuffer();
    
    if (comment != null) {
      buffer.writeln('  /// $comment');
    }
    buffer.writeln('  $returnType get $propertyName {');
    
    return buffer.toString();
  }

  /// Template for switch statement
  static String switchStatement({
    required String variable,
    required Map<String, String> cases,
    String? defaultCase,
  }) {
    final buffer = StringBuffer();
    
    buffer.writeln('    switch ($variable) {');
    
    for (final entry in cases.entries) {
      buffer.writeln("      case '${entry.key}':");
      buffer.writeln("        return '''${entry.value}''';");
    }
    
    if (defaultCase != null) {
      buffer.writeln("      default:");
      buffer.writeln("        return '''$defaultCase''';");
    }
    
    buffer.writeln('    }');
    
    return buffer.toString();
  }

  /// Template for generation comment
  static String generationComment() {
    return '''// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by Excel Translator
// ${DateTime.now()}
''';
  }
}
